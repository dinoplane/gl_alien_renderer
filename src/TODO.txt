TODO Abstract organize the logic better
- A renderpass system
- lighting
- baked lighting + instancing... damn im gonna regret this aint i

- Get rid of include clutter
- shadows
- reflections
- animation

- multidraws/indirect draws/culling that actually reduces compute
    - a draw a model instance with 1 draw call
        - not possible thats not what multidraw means
        - instead batch the draw calls (every N is a new instance)
        - we can only really do it this way since if i were to have instance count be greater than one in the draw command, i would need to move around amtrices into a new buffer (inefficient...)
        - the draw command probably needs the index of the model though
    - Steps:
        - 1. Modify the renderer to use indirect draws, DrawElementsIndirect.
            - the glviewer example code has a way to set this up per mesh.
            - very intuitive code, every primitive begins with a draw call
            - a mesh contains a buffer of primitives
            - DrawElementsIndirect is called on the location in the buffer (takes the 20 bytes from that pointer)
        - 2. Aggregate all the primitive's vertices and indices into 1 giant buffer
            - make sure i can render indirectly like that
        - 3. Use MultiDrawElementsIndirect instead, this time to draw everything in that buffer
        - 4. Modify the compute shader so that it modifies the draw out cmd buffer
        - 5. Modify the shaders so that it uses materials and textures (using an index to query them from ssbos);

- deferred shading
- add doxygen

Bugs:
- fix noninstanced model shader (im lazy so i dwanna right now)


Fixed:
- cirno's eyes get gouged out sometimes... figure out why
    - This was also happening with the cactuar
    - Fragments get discarded because a comparison in the fragment shader keeps firing
        - this is beacuse the alpha cuttoff was greater than the alpha
        - this was caused by the model loading a material out of the range of its material vector
            - out of range exception wasn't thrown because [] operator has *undefined behavior* for indices out of range
        - so the alpha cutoff was garbage sometimes and 0 most of the time.
        - Fixed by making sure I assume that there is a default material in every model.

Capstone TODOs:
- Implement an L system


DONE
- Add material to the scene 
- GPU Frustum Culling + standalone models
- untangle shader interfaces
- Loading models
- add a fumo
- A mesh is an array of primitives
- a model is an array of nodes, pointing to said meshes
- GPU Frustum Culling + instancing
- Multiple Cameras
- Multiple Renderers
- Post processing logic
- Instancing with vertex attributes
- Instancing with SSBO
- CPU Frustum Culling
- Adding IMGUI
- Add tracy to the app
- A scene data vs a scene
    - Honestly, the scene data could be a file, and the scene could have a load from file method.
a renderer takes in a const Scene&, a const Framebuffer& and a const cameraIndex


CUT: 
- Make sure to delete all buffers after exiting // eeeeeeehhh?
    There's no point if memory is not in demand in the lifetime.
    The program will release all its resources upon exit anyway!
    My excuse for allowing memory leaks lol!
- Use git submodules? Debatable
    Don't wanna mess with this, in production code, using public modules is tied to legality issues, 




TAROT
0. FOOL:            Load a model.
1. MAGICIAN:        Flames
2. PRIESTESS:       edge detection and more filters
3. EMPRESS:         orbs (deferred shading)
4. EMPEROR:         army boids (of words!) RENDERING TEXT!
5. HIEROPHANT:      culling
6. LOVERS:          angel of love/death (rendering blood!)
7. CHARIOT:         fur (NOT SHELL TECTURING!)
8. JUSTICE:         mirrors (Let karma do its work. )
9. HERMIT:          bokeh blurs
10. FORTUNE:        a gleaming coin! pbr
11. STRENGTH:       ray tracing? dithering???
12. HANGED_MAN:     shadows
13. DEATH:          ????
14. TEMPERANCE:     grass
15. DEVIL:          volcano???
16. TOWER:          destruction!!!!
17. STAR:           DDR
18. MOON:           ocean santa cruz
19. SUN:            god rays and volumetric clouds
20. JUDGEMENT:      Heaven
21. WORLD:          ????




Interface 

Locations:
0: aPosition
1: aNormal
2: aTexCoord
3: aTangent // Maybe

Bindings:
0: 